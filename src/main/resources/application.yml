server:
  port: 9000
spring:
  application:
    name: gateway
  cloud:
    gateway:
      default-filters:
        # IP黑名单
        - name: IpBlackList
          args:
            blacklist:
              - "192.168.31.19"
              - "127.0.0.1"
        # 自定义限流
        - name: MyRequestRateLimiter
          args:
            key-resolver: "#{@uriKeyResolver}"
            redis-rate-limiter.replenishRate: 1
            redis-rate-limiter.burstCapacity: 1
            redis-rate-limiter.requestedTokens: 1

      routes:
        - id: order-service
          uri: http://localhost:9000
          predicates:
            - Path=/orders
          filters:
            - SetPath=/orders/list
        - id: product-service
          uri: http://localhost:9000
          predicates:
            - Path=/products
          filters:
            - SetPath=/products/list
        - id: user-service
          uri: http://localhost:9000
          predicates:
            - Path=/users
          filters:
            - SetPath=/users/list
        - id: account-service
          uri: http://localhost:9000
          predicates:
            - Path=/accounts
          filters:
            - SetPath=/accounts/list
        - id: httpbin-service
          uri: http://httpbin.org
          predicates:
            - Path=/**
          filters:
            - AddRequestParameter=color, blue
            - AddRequestHeader=X-Request-Red, Blue
            - AddResponseHeader=X-Response-Red, Blue
      #            - name: MyRequestRateLimiter
      #              args:
      #                # 使用SpEL表达式从Spring容器中获取Bean对象
      #                key-resolver: '#{@uriKeyResolver}'
      #                # 令牌桶每秒填充平均速率
      #                redis-rate-limiter.replenishRate: 1
      #                # 令牌桶的上限
      #                redis-rate-limiter.burstCapacity: 1
      #                # 每次请求消费一个令牌
      #                redis-rate-limiter.requestedTokens: 1

  redis:
    host: 192.168.101.4
    port: 6379

logging:
  level:
    org.springframework.cloud.gateway: debug

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true